name: Publish to PyPI

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine wheel setuptools
        
    - name: Verify package metadata
      run: |
        python setup.py check --metadata --strict
        
    - name: Extract version from release tag
      id: get_version
      run: |
        # Remove 'v' prefix from tag if present (e.g., v1.0.0 -> 1.0.0)
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
        
    - name: Update version in setup.py
      run: |
        # Update version in setup.py to match the release tag
        sed -i 's/version="[^"]*"/version="${{ steps.get_version.outputs.version }}"/' setup.py
        echo "Updated setup.py version to ${{ steps.get_version.outputs.version }}"
        
    - name: Build package
      run: |
        # Clean any previous builds
        rm -rf build/ dist/ *.egg-info/
        
        # Build source distribution and wheel
        python -m build
        
    - name: Verify build artifacts
      run: |
        # Check that both sdist and wheel were created
        ls -la dist/
        
        # Verify the package can be installed
        python -m pip install dist/*.whl
        python -c "import accelera; print(f'Accelera version: {accelera.__version__ if hasattr(accelera, \"__version__\") else \"unknown\"}')"
        
    - name: Check package with twine
      run: |
        python -m twine check dist/*
        
    - name: Publish to PyPI
      if: github.event.release.prerelease == false
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/*